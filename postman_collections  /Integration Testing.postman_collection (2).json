{
	"info": {
		"_postman_id": "a17c45bc-7a49-4f1f-8e2b-69f90ef918d7",
		"name": "Integration Testing",
		"description": "# About this collection\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis collection guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## **Using this collection**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this collection, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29077337"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"TestUser\",\n    \"email\" : \"TestUser@gmail.com\",\n    \"password\" : \"TEST123test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Assuming the token is returned in JSON format  ",
									"const responseJson = pm.response.json();  ",
									"pm.environment.set(\"jwt_token\", responseJson.data.token); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"TestUser@gmail.com\",\n    \"password\" : \"TEST123test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "forgotPassword",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"TestUser@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/forgotPassword",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"forgotPassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "resetPassword",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\" : \"TestUser@gmail.com\",\n    \"newPassword\" : \"TEST123testNEW\",\n    \"token\" : \"otp password sent via email please check your email\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/resetPassword",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"resetPassword"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "jwt",
				"jwt": [
					{
						"key": "algorithm",
						"value": "HS256",
						"type": "string"
					},
					{
						"key": "isSecretBase64Encoded",
						"value": false,
						"type": "boolean"
					},
					{
						"key": "payload",
						"value": "{}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "headerPrefix",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "queryParamKey",
						"value": "token",
						"type": "string"
					},
					{
						"key": "header",
						"value": "{}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Feed",
			"item": [
				{
					"name": "Posts",
					"item": [
						{
							"name": "create a post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();  ",
											"pm.environment.set(\"postID\", responseJson.data.post._id); ",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\" : \"this post created by a user from a postman\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/feed/posts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "get a post by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/feed/posts/{{postID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"posts",
										"{{postID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all posts by page number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/feed/posts/?page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"posts",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update post content",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\" : \"updated content of a post\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/feed/posts/{{postID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"posts",
										"{{postID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a post by it's id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/feed/posts/{{postID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"posts",
										"{{postID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get post comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/feed/posts/{{postID}}/comments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"posts",
										"{{postID}}",
										"comments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "create a comment on a post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();  ",
											"pm.environment.set(\"commentID\", responseJson.data.comment._id); ",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{base_url}}/feed/comments/{{postID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"comments",
										"{{postID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create a reply on a comment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\" : \"some reply to some comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/feed/comments/replies/{{commentID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"comments",
										"replies",
										"{{commentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update comment content",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"new updated comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/feed/comments/{{commentID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"comments",
										"{{commentID}}"
									],
									"query": [
										{
											"key": "Auth",
											"value": "Bearer {{jwt_token}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete a comment",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/feed/comments/{{commetnID}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"feed",
										"comments",
										"{{commetnID}}"
									],
									"query": [
										{
											"key": "Auth",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Users by Name Prefix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Assuming the token is returned in JSON format  ",
									"const responseJson = pm.response.json();  ",
									"pm.environment.set(\"userID\", responseJson.data[0]._id); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/?name=Test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users?id={{userID}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "{{userID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get all Friends",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/friends",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"friends"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all user's posts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/posts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all user's comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user's name or email",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"updateType\" : \"name\",\n    \"name\" : \"newName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete  a user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user's notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/notifications",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		}
	]
}